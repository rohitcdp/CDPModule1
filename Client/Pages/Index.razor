@page "/"
@inject HttpClient Http
@inject IJSRuntime JS
@using System.Text;
@using CDPModule1.Client.Services;
@using CDPModule1.Shared;
@using GrapeCity.Documents.Pdf;
@using GrapeCity.Documents.Pdf.TextMap;
@using System.Net.Http.Headers;
@using iText.Kernel.Pdf;
@using iText.Kernel.Pdf.Canvas.Parser.Listener;
@using iText.Kernel.Pdf.Canvas.Parser;
@inject HttpClient httpClient
@inject ILocalStorageService localStorageService;


<h3>Settings</h3>

<div>
    <h1>Upload File </h1>
    <InputFile OnChange="@uploadPdfNew" id="FileUpload1" />
</div>
<label>Html upload data ..</label>

@((MarkupString)@htmlCode.Replace("\r\n", "<br />"));
    



@code {

    private List<UploadResult> uploadResults = new();
    [Parameter]
    public string htmlCode { get; set; } = string.Empty;

    public async Task uploadPdfNew(InputFileChangeEventArgs inputFileChangeEvent)
    {
        try
        {
            var file = inputFileChangeEvent.File;
            byte[] buffer = new byte[file.Size];
            await file.OpenReadStream().ReadAsync(buffer);
            string base64 = Convert.ToBase64String(buffer);
            using var dataContent = new MultipartFormDataContent();

        
            httpClient.DefaultRequestHeaders.Clear();
            string token = await localStorageService.GetItem<string>("token");
            httpClient.DefaultRequestHeaders.Add("Authorization", "Bearer " + token);
            httpClient.DefaultRequestHeaders.Add("ContentType", "application/json");

            var content = new FileResultContent
                {
                    base64Content = base64,
                    fileExt = "pdf",
                    existingFileName = file.Name,
                    newFileName = Path.GetRandomFileName().Split('.')[0]

                };
            var res = await httpClient.PostAsJsonAsync("api/File/uploadPdf", content);
            string responseModal = await res.Content.ReadAsStringAsync();
            if (!string.IsNullOrEmpty(responseModal))
            {
                htmlCode = responseModal;
            }


        }
        catch (Exception ex)
        {
            Console.WriteLine("error");
            htmlCode = "Error in api";
        }
    }
}