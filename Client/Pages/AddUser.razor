@page "/add_user"
@page "/add_user/{Id}"

@using CDPModule1.Client.Services;
@using CDPModule1.Shared
@using CDPModule1.Shared.RequestModel
@using System.Text
@using System.Security.Claims;
@using System.IdentityModel.Tokens.Jwt;

@inject HttpClient httpClient
@inject ILocalStorageService localStorageService;


<div class="row">
    <div class="col-md-12">
        <EditForm Model="@user" OnValidSubmit="@Save" class="card card-body bg-light mt-5">
            <DataAnnotationsValidator />
            <div class="row">
                <div class="col-lg-12">
                    <div class="general-info">
                        <div class="row">
                            <div class="col-lg-6">
                                <table class="table">
                                    <tbody>
                                        <tr>
                                            <td>
                                                <div class="col-md-16">
                                                    <div class="card">
                                                        <div class="card-header">
                                                            <h5 class="text-uppercase mb-0">User Info</h5>
                                                        </div>
                                                        <div class="list-group-item">
                                                            <div class="form-group row">
                                                            </div>

                                                            <label>User Name</label>
                                                            <div class="input-group">

                                                                <span class="input-group-text">
                                                                    <i class="fas fa-portrait"></i>

                                                                </span>
                                                                <input placeholder="UserName" @bind="@user.Name" class="form-control" />
                                                                <ValidationMessage For="@(() => user.Name)" class="text-danger" />
                                                            </div>

                                                            <label>Email</label>
                                                            <div class="input-group">

                                                                <span class="input-group-text">
                                                                    <i class="far fa-address-card "></i>
                                                                    <span class="bi-person"></span>
                                                                </span>
                                                                <input placeholder="Email" @bind="@user.Email" class="form-control" />
                                                                <ValidationMessage For="@(() => user.Email)" class="text-danger" />

                                                            </div>


                                                            <label>Password</label>
                                                            <div class="input-group">

                                                                <span class="input-group-text">
                                                                    <i class="far fa-address-card "></i>
                                                                    <span class="bi-person"></span>
                                                                </span>
                                                                <input placeholder="Password" @bind="@user.Password" class="form-control" />
                                                                <ValidationMessage For="@(() => user.Password)" class="text-danger" />

                                                            </div>


                                                        </div>
                                                    </div>
                                                </div>

                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div class="col-lg-6">
                                <table class="table">
                                    <tbody>
                                        <tr>
                                            <td>
                                                <div class="col-md-16">
                                                    <div class="card">
                                                        <div class="card-header">
                                                            <h5 class="text-uppercase mb-0">User Info</h5>
                                                        </div>
                                                        <div class="list-group-item">
                                                            <div class="form-group row">
                                                            </div>

                                                            <label>Address</label>
                                                            <div class="input-group">

                                                                <span class="input-group-text">
                                                                    <i class="far fa-address-card "></i>
                                                                    <span class="bi-person"></span>
                                                                </span>
                                                                <input placeholder="Address" @bind="@user.Address" class="form-control" />
                                                                <ValidationMessage For="@(() => user.Address)" class="text-danger" />

                                                            </div>


                                                            <label>Date Of Birth</label>
                                                            <div class="input-group">
                                                                <span class="input-group-text">
                                                                    <i class="fas fa-map-pin"></i>
                                                                    <span class="bi-person"></span>
                                                                </span>

                                                                <input type="date" placeholder="Date of Birth" @bind="@user.DOB" class="form-control" />
                                                                <ValidationMessage For="@(() => user.DOB)" class="text-danger" />
                                                            </div>
                                                            <label>Gender</label>
                                                            <div class="input-group">
                                                                <span class="input-group-text">
                                                                    <i class="far fa-address-card "></i>
                                                                    <span class="bi-person"></span>
                                                                </span>
                                                                <select name="gender" id="gender" @bind="user.Gender" class="form-control">
                                                                    <option value="">-Select Gender-</option>
                                                                    <option value="Male">Male</option>
                                                                    <option value="Female">Female</option>
                                                                    <option value="Other">Other</option>
                                                                </select>
                                                                <ValidationMessage For="@(() => user.Gender)" class="text-danger" />
                                                            </div>
                                                            <label for="tenant_select" class="col-md-2 col-form-label">Tenant</label>
                                                            @if (Role == "admin")
                                                            {
                                                                <div class="form-group">

                                                                    <div class="input-group">
                                                                        <span class="input-group-text">
                                                                            <i class="far fa-address-card "></i>
                                                                            <span class="bi-person"></span>
                                                                        </span>
                                                                        <select id="tenant_select" class="form-control" @bind="TenantId">
                                                                            @foreach (var tenant in Tenants)
                                                                            {
                                                                                <option value="@tenant.Id">@tenant.Name</option>
                                                                            }
                                                                        </select>
                                                                    </div>
                                                                </div>
                                                            }



                                                        </div>
                                                    </div>


                                                </div>


                                            </td>

                                        </tr>


                                    </tbody>

                                </table>
                            </div>
                            <div class="text-center">

                                <button type="submit" style="background-color:rgb(134,188,37);color:white;" class="btn btn-primary" value="Save">Save</button>
                                @*  <input type="button" style="background-color:rgb(134,188,37);color:white;" class="btn btn-primary" value="Cancel" />*@


                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <p>@Message</p>
        </EditForm>
    </div>
</div>




@code {
    [Parameter]
    public string Id { get; set; }

    [Parameter]
    public UserModal user { get; set; }

    public Guid TenantId { get; set; }

    public string Message { get; set; }

    public string Role { get; set; }

    public string token { get; set; }

    public List<Tenant> Tenants { get; set; }

    protected override async Task OnInitializedAsync()
    {
        user = new UserModal();
        Message = string.Empty;
        token = await localStorageService.GetItem<string>("token");
        var handler = new JwtSecurityTokenHandler();
        var jwtSecurityToken = handler.ReadJwtToken(await localStorageService.GetItem<string>("token"));
        Role = jwtSecurityToken.Claims.Where(x => x.Type == "role").FirstOrDefault().Value;
        if (Role == "admin")
        {
            httpClient.DefaultRequestHeaders.Clear();
            httpClient.DefaultRequestHeaders.Add("Authorization", "Bearer " + token);
            var result = await httpClient.GetAsync("api/Tenant/GetAllTenants");
            Tenants = await result.Content.ReadFromJsonAsync<List<Tenant>>();
        }
        else
        {
            var claimObject = jwtSecurityToken.Claims.Where(x => x.Type == "TenantId").FirstOrDefault();
            string? value = claimObject.Value;
            user.TenantId = new Guid(value);
        }
        if (!string.IsNullOrEmpty(Id))
        {
            httpClient.DefaultRequestHeaders.Clear();
            httpClient.DefaultRequestHeaders.Add("Authorization", "Bearer " + token);
            var userRes = await httpClient.GetFromJsonAsync<User>("api/User/GetById?Id=" + Id);
            user.Id = userRes.Id;
            user.Address = userRes.Address;
            user.IsEmailVerified = userRes.IsEmailVerified;
            user.IsDeleted = userRes.IsDeleted;
            user.TenantId = userRes.TenantId;
            user.Country = userRes.Country;
            user.Gender = userRes.Gender;
            user.DOB = userRes.DOB;
            user.Email = userRes.Email;
            user.Name = userRes.Name;
            user.UserType = userRes.UserType;
            user.Password = userRes.Password;
            TenantId = user.TenantId;

        }
           
    }

    public async void Save()
    {
        try
        {
            user.UserType = "user";
            user.IsDeleted = false;
            if (Role == "admin")
            {
                user.TenantId = TenantId;
            }
            httpClient.DefaultRequestHeaders.Clear();
            httpClient.DefaultRequestHeaders.Add("Authorization", "Bearer " + token);
            ResponseModal? responseModal;
            if(user.Id != new Guid())
            {
                var result = await httpClient.PostAsJsonAsync("api/User/UpdateUser", user);
                responseModal = await result.Content.ReadFromJsonAsync<ResponseModal>();

            }
            else
            {
                var result = await httpClient.PostAsJsonAsync("api/Account/AddUser", user);
                responseModal = await result.Content.ReadFromJsonAsync<ResponseModal>();

            }
            if (responseModal?.StatusCode == 200 && responseModal?.Message == "Success")
            {
                user.Email = string.Empty;
                user.Name = string.Empty;
                user.UserType = string.Empty;
                user.Password = string.Empty;
                Message = responseModal.Message;
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
    }
}